// Code generated by protoc-gen-go. DO NOT EDIT.
// source: server.proto

package server

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Empty struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Empty) Reset()         { *m = Empty{} }
func (m *Empty) String() string { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()    {}
func (*Empty) Descriptor() ([]byte, []int) {
	return fileDescriptor_server_0626399bafb6ab28, []int{0}
}
func (m *Empty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Empty.Unmarshal(m, b)
}
func (m *Empty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Empty.Marshal(b, m, deterministic)
}
func (dst *Empty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Empty.Merge(dst, src)
}
func (m *Empty) XXX_Size() int {
	return xxx_messageInfo_Empty.Size(m)
}
func (m *Empty) XXX_DiscardUnknown() {
	xxx_messageInfo_Empty.DiscardUnknown(m)
}

var xxx_messageInfo_Empty proto.InternalMessageInfo

type InfoResponse struct {
	Port                 string      `protobuf:"bytes,1,opt,name=Port,proto3" json:"Port,omitempty"`
	ServerID             string      `protobuf:"bytes,2,opt,name=ServerID,proto3" json:"ServerID,omitempty"`
	K8SSession           *K8SSession `protobuf:"bytes,4,opt,name=K8sSession,proto3" json:"K8sSession,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *InfoResponse) Reset()         { *m = InfoResponse{} }
func (m *InfoResponse) String() string { return proto.CompactTextString(m) }
func (*InfoResponse) ProtoMessage()    {}
func (*InfoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_server_0626399bafb6ab28, []int{1}
}
func (m *InfoResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InfoResponse.Unmarshal(m, b)
}
func (m *InfoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InfoResponse.Marshal(b, m, deterministic)
}
func (dst *InfoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InfoResponse.Merge(dst, src)
}
func (m *InfoResponse) XXX_Size() int {
	return xxx_messageInfo_InfoResponse.Size(m)
}
func (m *InfoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_InfoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_InfoResponse proto.InternalMessageInfo

func (m *InfoResponse) GetPort() string {
	if m != nil {
		return m.Port
	}
	return ""
}

func (m *InfoResponse) GetServerID() string {
	if m != nil {
		return m.ServerID
	}
	return ""
}

func (m *InfoResponse) GetK8SSession() *K8SSession {
	if m != nil {
		return m.K8SSession
	}
	return nil
}

type K8SSession struct {
	ServerAddress        string   `protobuf:"bytes,1,opt,name=ServerAddress,proto3" json:"ServerAddress,omitempty"`
	ServerPort           uint32   `protobuf:"varint,2,opt,name=ServerPort,proto3" json:"ServerPort,omitempty"`
	ServerBaseUrl        string   `protobuf:"bytes,3,opt,name=ServerBaseUrl,proto3" json:"ServerBaseUrl,omitempty"`
	AccessToken          string   `protobuf:"bytes,4,opt,name=AccessToken,proto3" json:"AccessToken,omitempty"`
	ApiCalls             uint64   `protobuf:"varint,5,opt,name=ApiCalls,proto3" json:"ApiCalls,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *K8SSession) Reset()         { *m = K8SSession{} }
func (m *K8SSession) String() string { return proto.CompactTextString(m) }
func (*K8SSession) ProtoMessage()    {}
func (*K8SSession) Descriptor() ([]byte, []int) {
	return fileDescriptor_server_0626399bafb6ab28, []int{2}
}
func (m *K8SSession) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_K8SSession.Unmarshal(m, b)
}
func (m *K8SSession) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_K8SSession.Marshal(b, m, deterministic)
}
func (dst *K8SSession) XXX_Merge(src proto.Message) {
	xxx_messageInfo_K8SSession.Merge(dst, src)
}
func (m *K8SSession) XXX_Size() int {
	return xxx_messageInfo_K8SSession.Size(m)
}
func (m *K8SSession) XXX_DiscardUnknown() {
	xxx_messageInfo_K8SSession.DiscardUnknown(m)
}

var xxx_messageInfo_K8SSession proto.InternalMessageInfo

func (m *K8SSession) GetServerAddress() string {
	if m != nil {
		return m.ServerAddress
	}
	return ""
}

func (m *K8SSession) GetServerPort() uint32 {
	if m != nil {
		return m.ServerPort
	}
	return 0
}

func (m *K8SSession) GetServerBaseUrl() string {
	if m != nil {
		return m.ServerBaseUrl
	}
	return ""
}

func (m *K8SSession) GetAccessToken() string {
	if m != nil {
		return m.AccessToken
	}
	return ""
}

func (m *K8SSession) GetApiCalls() uint64 {
	if m != nil {
		return m.ApiCalls
	}
	return 0
}

func init() {
	proto.RegisterType((*Empty)(nil), "Empty")
	proto.RegisterType((*InfoResponse)(nil), "InfoResponse")
	proto.RegisterType((*K8SSession)(nil), "K8sSession")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ZuesControlClient is the client API for ZuesControl service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ZuesControlClient interface {
	GetInfo(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*InfoResponse, error)
}

type zuesControlClient struct {
	cc *grpc.ClientConn
}

func NewZuesControlClient(cc *grpc.ClientConn) ZuesControlClient {
	return &zuesControlClient{cc}
}

func (c *zuesControlClient) GetInfo(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*InfoResponse, error) {
	out := new(InfoResponse)
	err := c.cc.Invoke(ctx, "/ZuesControl/GetInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ZuesControlServer is the server API for ZuesControl service.
type ZuesControlServer interface {
	GetInfo(context.Context, *Empty) (*InfoResponse, error)
}

func RegisterZuesControlServer(s *grpc.Server, srv ZuesControlServer) {
	s.RegisterService(&_ZuesControl_serviceDesc, srv)
}

func _ZuesControl_GetInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ZuesControlServer).GetInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ZuesControl/GetInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ZuesControlServer).GetInfo(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _ZuesControl_serviceDesc = grpc.ServiceDesc{
	ServiceName: "ZuesControl",
	HandlerType: (*ZuesControlServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetInfo",
			Handler:    _ZuesControl_GetInfo_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "server.proto",
}

func init() { proto.RegisterFile("server.proto", fileDescriptor_server_0626399bafb6ab28) }

var fileDescriptor_server_0626399bafb6ab28 = []byte{
	// 250 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0x90, 0xc1, 0x4a, 0xc3, 0x40,
	0x10, 0x86, 0x5d, 0x4d, 0x5b, 0x3b, 0x69, 0x2e, 0x73, 0x5a, 0x7a, 0x90, 0xb0, 0x78, 0x08, 0x08,
	0x01, 0xeb, 0xc5, 0x6b, 0xac, 0x22, 0xc5, 0x8b, 0x6c, 0xf5, 0xe2, 0xad, 0xb6, 0x23, 0x94, 0xc6,
	0x4c, 0xd8, 0x59, 0x05, 0x5f, 0xcc, 0xe7, 0x93, 0x6c, 0x4a, 0xbb, 0xde, 0x76, 0xbe, 0xdd, 0xfd,
	0x67, 0xe6, 0x83, 0x89, 0x90, 0xfb, 0x26, 0x57, 0xb6, 0x8e, 0x3d, 0x9b, 0x11, 0x0c, 0x1e, 0x3e,
	0x5b, 0xff, 0x63, 0x76, 0x30, 0x59, 0x34, 0x1f, 0x6c, 0x49, 0x5a, 0x6e, 0x84, 0x10, 0x21, 0x79,
	0x66, 0xe7, 0xb5, 0xca, 0x55, 0x31, 0xb6, 0xe1, 0x8c, 0x53, 0x38, 0x5f, 0x86, 0xcf, 0x8b, 0x7b,
	0x7d, 0x1a, 0xf8, 0xa1, 0xc6, 0x2b, 0x80, 0xa7, 0x5b, 0x59, 0x92, 0xc8, 0x96, 0x1b, 0x9d, 0xe4,
	0xaa, 0x48, 0x67, 0x69, 0x79, 0x44, 0x36, 0xba, 0x36, 0xbf, 0x2a, 0x7e, 0x8d, 0x97, 0x90, 0xf5,
	0x39, 0xd5, 0x66, 0xe3, 0x48, 0x64, 0xdf, 0xf4, 0x3f, 0xc4, 0x0b, 0x80, 0x1e, 0x84, 0xb9, 0xba,
	0xfe, 0x99, 0x8d, 0xc8, 0x31, 0xe5, 0x6e, 0x25, 0xf4, 0xea, 0x6a, 0x7d, 0x16, 0xa7, 0xec, 0x21,
	0xe6, 0x90, 0x56, 0xeb, 0x35, 0x89, 0xbc, 0xf0, 0x8e, 0xfa, 0x41, 0xc7, 0x36, 0x46, 0xdd, 0x96,
	0x55, 0xbb, 0x9d, 0xaf, 0xea, 0x5a, 0xf4, 0x20, 0x57, 0x45, 0x62, 0x0f, 0xf5, 0xec, 0x1a, 0xd2,
	0xb7, 0x2f, 0x92, 0x39, 0x37, 0xde, 0x71, 0x8d, 0x06, 0x46, 0x8f, 0xe4, 0x3b, 0x6f, 0x38, 0x2c,
	0x83, 0xc7, 0x69, 0x56, 0xc6, 0x1a, 0xcd, 0xc9, 0xfb, 0x30, 0x88, 0xbe, 0xf9, 0x0b, 0x00, 0x00,
	0xff, 0xff, 0xd9, 0x54, 0xf8, 0x5c, 0x78, 0x01, 0x00, 0x00,
}
