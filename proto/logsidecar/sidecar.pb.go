// Code generated by protoc-gen-go. DO NOT EDIT.
// source: sidecar.proto

package sidecar

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Void struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Void) Reset()         { *m = Void{} }
func (m *Void) String() string { return proto.CompactTextString(m) }
func (*Void) ProtoMessage()    {}
func (*Void) Descriptor() ([]byte, []int) {
	return fileDescriptor_sidecar_3c44afeb00e091ce, []int{0}
}
func (m *Void) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Void.Unmarshal(m, b)
}
func (m *Void) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Void.Marshal(b, m, deterministic)
}
func (dst *Void) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Void.Merge(dst, src)
}
func (m *Void) XXX_Size() int {
	return xxx_messageInfo_Void.Size(m)
}
func (m *Void) XXX_DiscardUnknown() {
	xxx_messageInfo_Void.DiscardUnknown(m)
}

var xxx_messageInfo_Void proto.InternalMessageInfo

type SidecarStatus struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Health               string   `protobuf:"bytes,2,opt,name=health,proto3" json:"health,omitempty"`
	BytesProcessed       string   `protobuf:"bytes,3,opt,name=bytesProcessed,proto3" json:"bytesProcessed,omitempty"`
	UpStreamURL          string   `protobuf:"bytes,4,opt,name=upStreamURL,proto3" json:"upStreamURL,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SidecarStatus) Reset()         { *m = SidecarStatus{} }
func (m *SidecarStatus) String() string { return proto.CompactTextString(m) }
func (*SidecarStatus) ProtoMessage()    {}
func (*SidecarStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_sidecar_3c44afeb00e091ce, []int{1}
}
func (m *SidecarStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SidecarStatus.Unmarshal(m, b)
}
func (m *SidecarStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SidecarStatus.Marshal(b, m, deterministic)
}
func (dst *SidecarStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SidecarStatus.Merge(dst, src)
}
func (m *SidecarStatus) XXX_Size() int {
	return xxx_messageInfo_SidecarStatus.Size(m)
}
func (m *SidecarStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_SidecarStatus.DiscardUnknown(m)
}

var xxx_messageInfo_SidecarStatus proto.InternalMessageInfo

func (m *SidecarStatus) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *SidecarStatus) GetHealth() string {
	if m != nil {
		return m.Health
	}
	return ""
}

func (m *SidecarStatus) GetBytesProcessed() string {
	if m != nil {
		return m.BytesProcessed
	}
	return ""
}

func (m *SidecarStatus) GetUpStreamURL() string {
	if m != nil {
		return m.UpStreamURL
	}
	return ""
}

type SidecarBasicConfig struct {
	UpStreamURL          string   `protobuf:"bytes,1,opt,name=upStreamURL,proto3" json:"upStreamURL,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SidecarBasicConfig) Reset()         { *m = SidecarBasicConfig{} }
func (m *SidecarBasicConfig) String() string { return proto.CompactTextString(m) }
func (*SidecarBasicConfig) ProtoMessage()    {}
func (*SidecarBasicConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_sidecar_3c44afeb00e091ce, []int{2}
}
func (m *SidecarBasicConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SidecarBasicConfig.Unmarshal(m, b)
}
func (m *SidecarBasicConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SidecarBasicConfig.Marshal(b, m, deterministic)
}
func (dst *SidecarBasicConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SidecarBasicConfig.Merge(dst, src)
}
func (m *SidecarBasicConfig) XXX_Size() int {
	return xxx_messageInfo_SidecarBasicConfig.Size(m)
}
func (m *SidecarBasicConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_SidecarBasicConfig.DiscardUnknown(m)
}

var xxx_messageInfo_SidecarBasicConfig proto.InternalMessageInfo

func (m *SidecarBasicConfig) GetUpStreamURL() string {
	if m != nil {
		return m.UpStreamURL
	}
	return ""
}

func init() {
	proto.RegisterType((*Void)(nil), "Void")
	proto.RegisterType((*SidecarStatus)(nil), "SidecarStatus")
	proto.RegisterType((*SidecarBasicConfig)(nil), "SidecarBasicConfig")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// SidecarClient is the client API for Sidecar service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SidecarClient interface {
	GetStatus(ctx context.Context, in *Void, opts ...grpc.CallOption) (*SidecarStatus, error)
	ConfigureSidecar(ctx context.Context, in *SidecarBasicConfig, opts ...grpc.CallOption) (*SidecarStatus, error)
}

type sidecarClient struct {
	cc *grpc.ClientConn
}

func NewSidecarClient(cc *grpc.ClientConn) SidecarClient {
	return &sidecarClient{cc}
}

func (c *sidecarClient) GetStatus(ctx context.Context, in *Void, opts ...grpc.CallOption) (*SidecarStatus, error) {
	out := new(SidecarStatus)
	err := c.cc.Invoke(ctx, "/Sidecar/GetStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sidecarClient) ConfigureSidecar(ctx context.Context, in *SidecarBasicConfig, opts ...grpc.CallOption) (*SidecarStatus, error) {
	out := new(SidecarStatus)
	err := c.cc.Invoke(ctx, "/Sidecar/ConfigureSidecar", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SidecarServer is the server API for Sidecar service.
type SidecarServer interface {
	GetStatus(context.Context, *Void) (*SidecarStatus, error)
	ConfigureSidecar(context.Context, *SidecarBasicConfig) (*SidecarStatus, error)
}

func RegisterSidecarServer(s *grpc.Server, srv SidecarServer) {
	s.RegisterService(&_Sidecar_serviceDesc, srv)
}

func _Sidecar_GetStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Void)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SidecarServer).GetStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Sidecar/GetStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SidecarServer).GetStatus(ctx, req.(*Void))
	}
	return interceptor(ctx, in, info, handler)
}

func _Sidecar_ConfigureSidecar_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SidecarBasicConfig)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SidecarServer).ConfigureSidecar(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Sidecar/ConfigureSidecar",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SidecarServer).ConfigureSidecar(ctx, req.(*SidecarBasicConfig))
	}
	return interceptor(ctx, in, info, handler)
}

var _Sidecar_serviceDesc = grpc.ServiceDesc{
	ServiceName: "Sidecar",
	HandlerType: (*SidecarServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetStatus",
			Handler:    _Sidecar_GetStatus_Handler,
		},
		{
			MethodName: "ConfigureSidecar",
			Handler:    _Sidecar_ConfigureSidecar_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "sidecar.proto",
}

func init() { proto.RegisterFile("sidecar.proto", fileDescriptor_sidecar_3c44afeb00e091ce) }

var fileDescriptor_sidecar_3c44afeb00e091ce = []byte{
	// 210 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2d, 0xce, 0x4c, 0x49,
	0x4d, 0x4e, 0x2c, 0xd2, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x57, 0x62, 0xe3, 0x62, 0x09, 0xcb, 0xcf,
	0x4c, 0x51, 0x6a, 0x64, 0xe4, 0xe2, 0x0d, 0x86, 0xc8, 0x04, 0x97, 0x24, 0x96, 0x94, 0x16, 0x0b,
	0xf1, 0x71, 0x31, 0x65, 0xa6, 0x48, 0x30, 0x2a, 0x30, 0x6a, 0x70, 0x06, 0x31, 0x65, 0xa6, 0x08,
	0x89, 0x71, 0xb1, 0x65, 0xa4, 0x26, 0xe6, 0x94, 0x64, 0x48, 0x30, 0x81, 0xc5, 0xa0, 0x3c, 0x21,
	0x35, 0x2e, 0xbe, 0xa4, 0xca, 0x92, 0xd4, 0xe2, 0x80, 0xa2, 0xfc, 0xe4, 0xd4, 0xe2, 0xe2, 0xd4,
	0x14, 0x09, 0x66, 0xb0, 0x3c, 0x9a, 0xa8, 0x90, 0x02, 0x17, 0x77, 0x69, 0x41, 0x70, 0x49, 0x51,
	0x6a, 0x62, 0x6e, 0x68, 0x90, 0x8f, 0x04, 0x0b, 0x58, 0x11, 0xb2, 0x90, 0x92, 0x19, 0x97, 0x10,
	0xd4, 0x09, 0x4e, 0x89, 0xc5, 0x99, 0xc9, 0xce, 0xf9, 0x79, 0x69, 0x99, 0xe9, 0xe8, 0xfa, 0x18,
	0x31, 0xf4, 0x19, 0x65, 0x71, 0xb1, 0x43, 0xf5, 0x09, 0xa9, 0x70, 0x71, 0xba, 0xa7, 0x96, 0x40,
	0x7d, 0xc0, 0xaa, 0x07, 0xf2, 0x9a, 0x14, 0x9f, 0x1e, 0x8a, 0xc7, 0x94, 0x18, 0x84, 0x2c, 0xb9,
	0x04, 0x20, 0x86, 0x97, 0x16, 0xa5, 0xc2, 0x74, 0x0a, 0xeb, 0x61, 0xda, 0x8d, 0xa9, 0x35, 0x89,
	0x0d, 0x1c, 0x6c, 0xc6, 0x80, 0x00, 0x00, 0x00, 0xff, 0xff, 0xf9, 0x69, 0xeb, 0x04, 0x47, 0x01,
	0x00, 0x00,
}
